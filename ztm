#!/usr/bin/env python3
#################################################################################################
#################################################################################################
##  ZTM - command line interface for accessing timetimes in Warsaw, Poland. 
##  
##  Author: Bartosz Chmielewski
#################################################################################################
#################################################################################################
import json
import os
import argparse
import requests
from rich import print_json


ZTM_API = os.getenv('ZTM_API')
baseurl = "https://api.um.warszawa.pl/"

if (not ZTM_API):
    print("ZTM_API variable not set properly. Please set the variable with command: export ZTM_API=(apikey)")

def getdata(url, urlparams):
    ## Sending request to API and handling error codes if needed. 
    print(" --> Trying to connect to:", url)
    try:
        r = requests.get(url=url, params=urlparams)
    except requests.exceptions.RequestException as e: 
        print(" --> Connection to", url, "failed.")
        quit()
    else:
        print(" --> Successfully connected to", url )
    if r.status_code == 200:   
        print(" --> Connection successful. Got a response with a valid status code:", r.status_code)
        print("")
    else:
        print(" --> Got a response with unexpected response code:", r.status_code, ". Please try again.")
        quit()
    return r.json()

parser = argparse.ArgumentParser(description="ZTM Commandline Interface")
parser.add_argument('action', choices=['getstopid', 'getlines', 'getschedule', 'getgpstram', 'getgpsbus' ], help="Choose one of supported options.")
parser.add_argument('-n', nargs="?", help="Name of the Stops Group Name. For example: \"Jana Kazimierza\".",)
parser.add_argument('-i', nargs="?", help="Stop Group ID. For example: 5205.",)
parser.add_argument('-s', nargs="?", help="Stop ID. For example: 01.",)
parser.add_argument('-l', nargs="?", help="Line. For example: 255.",)
parser.add_argument('-b', nargs="?", help="Brigade. For example: 01.",)
args = parser.parse_args()


if args.action == 'getstopid':
    if args.n:
        urlparams = { 'apikey': ZTM_API, 'id': 'b27f4c17-5c50-4a5b-89dd-236b282bc499', 'name': args.n }
        url = baseurl + "api/action/dbtimetable_get" 
        r = getdata(url, urlparams)
        #print_json(json.dumps(r), indent=3)
        for i in r['result']:
            print("Stop Group Name:", i['values'][1]['value'], "Stop Group ID:", i['values'][0]['value'])
    else:
        print("Please provide a Stop Group Name with -g parameter. Example: ztm getstopid -g \"Jana Kazimierza\"")

elif args.action == 'getlines':
    if ( args.i and args.s ):
        urlparams = { 'apikey': ZTM_API, 'id': '88cd555f-6f31-43ca-9de4-66c479ad5942', 'busstopId': args.i, 'busstopNr': args.s }
        url = baseurl + "api/action/dbtimetable_get" 
        r = getdata(url, urlparams)
        for i in r['result']:
            print("Line:", i['values'][0]['value'])
    else:
        print("Please provide Stop Group ID with -i and Stop ID with -s parameters. Example: ztm getlines -i 5205 -s 01")

elif args.action == 'getschedule':
    if ( args.i and args.s and args.l ):
        urlparams = { 'apikey': ZTM_API, 'id': 'e923fa0e-d96c-43f9-ae6e-60518c9f3238', 'busstopId': args.i, 'busstopNr': args.s, 'line': args.l }
        url = baseurl + "api/action/dbtimetable_get" 
        r = getdata(url, urlparams)
        print("{0:<10} {1:<35} {2:<10}".format("Time", "Direction" , "Brigade"))
        for i in r['result']:
            print("{0:<10} {1:<35} {2:<10}".format(i['values'][5]['value'][:5], i['values'][3]['value'], i['values'][2]['value'] ))
    else:
        print("Please provide Stop Group ID with -i, Stop ID with -s and Line with -l parameters. Example: ztm getschedule -i 5205 -s 01 -l 255")

elif args.action == 'getgpstram' or args.action == 'getgpsbus':
    if args.action == 'getgpsbus':  type = '1'
    else:   type = '2'
    
    if ( args.l ):
        if ( args.b ):
            urlparams = { 'apikey': ZTM_API, 'resource_id': 'f2e5503e927d-4ad3-9500-4ab9e55deb59', 'type': type, 'line': args.l, 'brigade': args.b }
        else:
            urlparams = { 'apikey': ZTM_API, 'resource_id': 'f2e5503e927d-4ad3-9500-4ab9e55deb59', 'type': type, 'line': args.l }
        
        url = baseurl + "api/action/busestrams_get" 
        r = getdata(url, urlparams)
        print("{0:<22} {1:<8} {2:<10} {3:<12} {4:<12} {5:<12} {6:<30}".format("Last update", "Line", "Brigade", "Vehicle ID", "GPS Lat.", "GPS Long.", "Map link"))
        for i in r['result']:
            googlelink = "https://maps.google.com/maps?q=loc:" + str(i['Lat']) + "," + str(i['Lon'])
            print("{0:<22} {1:<8} {2:<10} {3:<12} {4:<12} {5:<12} {6:<30}".format(i['Time'], i['Lines'], i['Brigade'], i['VehicleNumber'], i['Lat'], i['Lon'], googlelink))
    else:
        print("Please provide Line with -l and optionally brigade with -b parameters. Example: ztm", args.action, "-l 7")





